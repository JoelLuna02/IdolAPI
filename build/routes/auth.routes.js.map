{"version":3,"file":"auth.routes.js","names":["_express","require","_jsonwebtoken","_interopRequireDefault","_dotenv","_bodyParser","_bcryptjs","_JWT","_database","auth_router","Router","config","path","override","secret","process","env","SECRET_KEY","verify_token","req","res","next","token","headers","authorization","split","jwt","verify","err","decoded","status","json","user","isAdmin","message","error","Unauthorized","use","post","form","body","connectDB","salt","bcrypt","genSaltSync","passwd","hashSync","password","new_user","JWT_Auth","firstname","lastname","phone","parseInt","email","username","data","save","console","findOne","select","unauthorized","compareSync","sign","id","_id","expiresIn","access_token","_default","exports","default"],"sources":["../../source/routes/auth.routes.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport { Router } from \"express\";\nimport jwt from \"jsonwebtoken\";\nimport { config } from \"dotenv\";\nimport { json } from \"body-parser\";\nimport bcrypt from \"bcryptjs\";\n\nimport JWT_Auth from \"../models/JWT\";\nimport connectDB from \"../database\";\n\nconst auth_router = Router();\n\nconfig({ path: \".env.local\", override: true });\nconst secret = process.env.SECRET_KEY;\n\n/** ## JWT Token\n * This function is responsible for verifying the JWT authorization token and administration privileges.\n * @param {import(\"express\").Request} req - Request\n * @param {import(\"express\").Response} res - Response\n * @param {import(\"express\").NextFunction} next - Next Function\n * @returns {Promise<void>}\n */\nexport function verify_token(req, res, next) {\n\ttry {\n\t\tconst token = req.headers.authorization.split(\" \")[1];\n\t\tjwt.verify(token, secret, (err, decoded) => {\n\t\t\tif (err) return res.status(401).json(err);\n\t\t\treq.user = decoded;\n\t\t\tconst isAdmin = req.user.isAdmin || false;\n\t\t\tif (!isAdmin) {\n\t\t\t\treturn res.status(403).json({\n\t\t\t\t\tmessage: \"Forbidden: You need administrative privileges to access this resource\",\n\t\t\t\t});\n\t\t\t}\n\t\t\tnext();\n\t\t});\n\t} catch (error) {\n\t\treturn res.status(401).json({ Unauthorized: \"Token not provided\" });\n\t}\n}\n\nauth_router.use(json());\n\nauth_router.post(\"/signup\", async (req, res) => {\n\tconst form = req.body;\n\ttry {\n\t\tawait connectDB();\n\t\tvar salt = bcrypt.genSaltSync(12);\n\t\tconst passwd = bcrypt.hashSync(form.password, salt);\n\t\tconst new_user = new JWT_Auth({\n\t\t\tfirstname: form.firstname,\n\t\t\tlastname: form.lastname,\n\t\t\tphone: parseInt(form.phone),\n\t\t\temail: form.email,\n\t\t\tusername: form.username,\n\t\t\tpassword: passwd,\n\t\t\tisAdmin: form.isAdmin || false,\n\t\t});\n\t\tconst data = await new_user.save();\n\t\treturn res.status(201).json({ new_user: data, message: \"Successfully created user!\" });\n\t} catch (error) {\n\t\tconsole.error(error);\n\t\treturn res.status(500).json({ message: \"An error occurred in the query.\" });\n\t}\n});\n\nauth_router.post(\"/login\", async (req, res) => {\n\tconst form = req.body;\n\ttry {\n\t\tawait connectDB();\n\t\tconst user = await JWT_Auth.findOne({ username: form.username }).select(\n\t\t\t\"_id username password email isAdmin\",\n\t\t);\n\t\tif (!user) return res.status(401).json({ unauthorized: \"The username does not exist!\" });\n\t\tconst password = bcrypt.compareSync(form.password, user.password);\n\t\tif (!user || !password) {\n\t\t\tres.status(401).json({ unauthorized: \"Incorrect password. please try again.\" });\n\t\t}\n\t\tconst token = jwt.sign(\n\t\t\t{ id: user._id, username: user.username, isAdmin: user.isAdmin },\n\t\t\tsecret,\n\t\t\t{ expiresIn: \"1h\" },\n\t\t);\n\t\treturn res.status(200).json({ user, access_token: token });\n\t} catch (error) {\n\t\tconsole.error(error);\n\t\treturn res.status(500).json({ message: \"An error occurred in the query.\" });\n\t}\n});\n\nexport default auth_router;\n"],"mappings":"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","ignoreList":[]}