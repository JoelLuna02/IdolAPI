{"version":3,"file":"cover.routes.js","names":["_express","require","_Cover","_interopRequireDefault","_database","_mongoose","cover_routes","Router","get","req","res","connectDB","covers","Cover","find","populate","status","json","id","params","cover_id","isValidObjectId","message","findById","error","console","_default","exports","default"],"sources":["../../source/routes/cover.routes.js"],"sourcesContent":["import { Router } from \"express\";\n\nimport Cover from \"../models/Cover\";\nimport connectDB from \"../database\";\nimport { isValidObjectId } from \"mongoose\";\n\nconst cover_routes = Router();\n\ncover_routes.get(\"/\", async (req, res) => {\n\tawait connectDB();\n\tconst covers = await Cover.find()\n\t\t.populate(\"original\", \"-_id artist album release genre\")\n\t\t.populate(\"vtuber\", \"fanname branch unit\");\n\treturn res.status(200).json(covers);\n});\n\ncover_routes.get(\"/:cover_id\", async (req, res) => {\n\tconst id = req.params.cover_id;\n\ttry {\n\t\tawait connectDB();\n\t\tif (!isValidObjectId(id)) {\n\t\t\treturn res.status(400).json({ message: \"Invalid Cover ID\" });\n\t\t}\n\t\tconst covers = await Cover.findById(id)\n\t\t\t.populate(\"original\", \"-_id artist album release genre\")\n\t\t\t.populate(\"vtuber\", \"fanname branch unit\");\n\t\tif (!covers) {\n\t\t\treturn res.status(404).json({ message: \"Cover not Found\" });\n\t\t}\n\t\treturn res.status(200).json(covers);\n\t} catch (error) {\n\t\tconsole.error(error);\n\t\treturn res.status(500).json({ message: \"An error occurred in the query.\" });\n\t}\n});\n\nexport default cover_routes;\n"],"mappings":";;;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AAEA,IAAAC,MAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,SAAA,GAAAD,sBAAA,CAAAF,OAAA;AACA,IAAAI,SAAA,GAAAJ,OAAA;AAEA,MAAMK,YAAY,GAAG,IAAAC,eAAM,EAAC,CAAC;AAE7BD,YAAY,CAACE,GAAG,CAAC,GAAG,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACzC,MAAM,IAAAC,iBAAS,EAAC,CAAC;EACjB,MAAMC,MAAM,GAAG,MAAMC,cAAK,CAACC,IAAI,CAAC,CAAC,CAC/BC,QAAQ,CAAC,UAAU,EAAE,iCAAiC,CAAC,CACvDA,QAAQ,CAAC,QAAQ,EAAE,qBAAqB,CAAC;EAC3C,OAAOL,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACL,MAAM,CAAC;AACpC,CAAC,CAAC;AAEFN,YAAY,CAACE,GAAG,CAAC,YAAY,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAClD,MAAMQ,EAAE,GAAGT,GAAG,CAACU,MAAM,CAACC,QAAQ;EAC9B,IAAI;IACH,MAAM,IAAAT,iBAAS,EAAC,CAAC;IACjB,IAAI,CAAC,IAAAU,yBAAe,EAACH,EAAE,CAAC,EAAE;MACzB,OAAOR,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEK,OAAO,EAAE;MAAmB,CAAC,CAAC;IAC7D;IACA,MAAMV,MAAM,GAAG,MAAMC,cAAK,CAACU,QAAQ,CAACL,EAAE,CAAC,CACrCH,QAAQ,CAAC,UAAU,EAAE,iCAAiC,CAAC,CACvDA,QAAQ,CAAC,QAAQ,EAAE,qBAAqB,CAAC;IAC3C,IAAI,CAACH,MAAM,EAAE;MACZ,OAAOF,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEK,OAAO,EAAE;MAAkB,CAAC,CAAC;IAC5D;IACA,OAAOZ,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACL,MAAM,CAAC;EACpC,CAAC,CAAC,OAAOY,KAAK,EAAE;IACfC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,OAAOd,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEK,OAAO,EAAE;IAAkC,CAAC,CAAC;EAC5E;AACD,CAAC,CAAC;AAAC,IAAAI,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEYtB,YAAY","ignoreList":[]}