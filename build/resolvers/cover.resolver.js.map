{"version":3,"file":"cover.resolver.js","names":["_mongoose","require","_database","_interopRequireDefault","_Cover","_Original","_VTuber","cover_resolver","exports","Query","covers","connectDB","data","Cover","find","populate","getCover","_","ID","isValidObjectId","Error","findById","Mutation","addCover","name","musicVideo","illustration","mix","process","env","NODE_ENV","add_cover","save","addOriginal","artist","album","release","genre","add_original_data","Original","deleteCover","deleteOne","cover","deleted","_id","deletedCount","assignCoverToVTuber","VTID","CVID","vtuber","VTuber","push","assignOriginalDataToCover","ORID","original"],"sources":["../../source/resolvers/cover.resolver.js"],"sourcesContent":["import { isValidObjectId } from \"mongoose\";\n\nimport connectDB from \"../database\";\nimport Cover from \"../models/Cover\";\nimport Original from \"../models/Original\";\nimport VTuber from \"../models/VTuber\";\n\nexport const cover_resolver = {\n\tQuery: {\n\t\tcovers: async () => {\n\t\t\tawait connectDB();\n\t\t\tconst data = await Cover.find().populate(\"original\", \"-_id artist album release genre\");\n\t\t\treturn data;\n\t\t},\n\t\tgetCover: async (_, { ID }) => {\n\t\t\tawait connectDB();\n\t\t\tif (!isValidObjectId(ID)) throw new Error(\"Invalid Cover ID\");\n\t\t\tconst data = await Cover.findById(ID).populate(\"original\", \"-_id artist album release genre\");\n\t\t\tif (!data) throw new Error(\"Cover not found\");\n\t\t\treturn data;\n\t\t},\n\t},\n\tMutation: {\n\t\taddCover: async (_, { name, musicVideo, illustration, mix }) => {\n\t\t\tawait connectDB();\n\t\t\tif (process.env.NODE_ENV === \"production\") {\n\t\t\t\tthrow new Error(\"Mutation actions are only available in development mode\");\n\t\t\t}\n\t\t\tconst add_cover = new Cover({ name, musicVideo, illustration, mix });\n\t\t\tconst data = await add_cover.save();\n\t\t\treturn data;\n\t\t},\n\t\taddOriginal: async (_, { artist, album, release, genre }) => {\n\t\t\tawait connectDB();\n\t\t\tif (process.env.NODE_ENV === \"production\") {\n\t\t\t\tthrow new Error(\"Mutation actions are only available in development mode\");\n\t\t\t}\n\t\t\tconst add_original_data = new Original({ artist, album, release, genre });\n\t\t\tconst data = await add_original_data.save();\n\t\t\treturn data;\n\t\t},\n\t\tdeleteCover: async (_, { ID }) => {\n\t\t\tawait connectDB();\n\t\t\tif (process.env.NODE_ENV === \"production\") {\n\t\t\t\tthrow new Error(\"Mutation actions are only available in development mode\");\n\t\t\t}\n\t\t\tif (!isValidObjectId(ID)) throw new Error(\"Invalid Hashtag ID\");\n\t\t\tawait Original.deleteOne({ cover: ID });\n\t\t\tconst deleted = (await Cover.deleteOne({ _id: ID })).deletedCount;\n\t\t\tif (!deleted) throw new Error(\"Cover not found\");\n\t\t\treturn deleted;\n\t\t},\n\t\tassignCoverToVTuber: async (_, { VTID, CVID }) => {\n\t\t\tawait connectDB();\n\t\t\tif (process.env.NODE_ENV === \"production\") {\n\t\t\t\tthrow new Error(\"Mutation actions are only available in development mode\");\n\t\t\t}\n\t\t\tif (!isValidObjectId(VTID) || !isValidObjectId(CVID)) {\n\t\t\t\tthrow new Error(\"Invalid VTuber or Cover ID\");\n\t\t\t}\n\t\t\tconst vtuber = await VTuber.findById(VTID);\n\t\t\tconst cover = await Cover.findById(CVID);\n\t\t\tif (!vtuber || !cover) {\n\t\t\t\tthrow new Error(\"VTuber or Cover not found\");\n\t\t\t}\n\t\t\tvtuber.covers.push(cover._id);\n\t\t\tcover.vtuber = vtuber._id;\n\t\t\tawait vtuber.save();\n\t\t\tawait cover.save();\n\t\t\treturn vtuber;\n\t\t},\n\t\tassignOriginalDataToCover: async (_, { CVID, ORID }) => {\n\t\t\tawait connectDB();\n\t\t\tif (process.env.NODE_ENV === \"production\") {\n\t\t\t\tthrow new Error(\"Mutation actions are only available in development mode\");\n\t\t\t}\n\t\t\tif (!isValidObjectId(ORID) || !isValidObjectId(CVID)) {\n\t\t\t\tthrow new Error(\"Invalid Original data instance or Cover ID\");\n\t\t\t}\n\t\t\tconst original = await Original.findById(ORID);\n\t\t\tconst cover = await Cover.findById(CVID);\n\t\t\tif (!original || !cover) throw new Error(\"Original data instance or Cover not found\");\n\t\t\toriginal.cover = cover._id;\n\t\t\tcover.original = original._id;\n\t\t\tawait original.save();\n\t\t\tawait cover.save();\n\t\t\treturn cover;\n\t\t},\n\t},\n};\n"],"mappings":";;;;;;;AAAA,IAAAA,SAAA,GAAAC,OAAA;AAEA,IAAAC,SAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,MAAA,GAAAD,sBAAA,CAAAF,OAAA;AACA,IAAAI,SAAA,GAAAF,sBAAA,CAAAF,OAAA;AACA,IAAAK,OAAA,GAAAH,sBAAA,CAAAF,OAAA;AAEO,MAAMM,cAAc,GAAAC,OAAA,CAAAD,cAAA,GAAG;EAC7BE,KAAK,EAAE;IACNC,MAAM,EAAE,MAAAA,CAAA,KAAY;MACnB,MAAM,IAAAC,iBAAS,EAAC,CAAC;MACjB,MAAMC,IAAI,GAAG,MAAMC,cAAK,CAACC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,UAAU,EAAE,iCAAiC,CAAC;MACvF,OAAOH,IAAI;IACZ,CAAC;IACDI,QAAQ,EAAE,MAAAA,CAAOC,CAAC,EAAE;MAAEC;IAAG,CAAC,KAAK;MAC9B,MAAM,IAAAP,iBAAS,EAAC,CAAC;MACjB,IAAI,CAAC,IAAAQ,yBAAe,EAACD,EAAE,CAAC,EAAE,MAAM,IAAIE,KAAK,CAAC,kBAAkB,CAAC;MAC7D,MAAMR,IAAI,GAAG,MAAMC,cAAK,CAACQ,QAAQ,CAACH,EAAE,CAAC,CAACH,QAAQ,CAAC,UAAU,EAAE,iCAAiC,CAAC;MAC7F,IAAI,CAACH,IAAI,EAAE,MAAM,IAAIQ,KAAK,CAAC,iBAAiB,CAAC;MAC7C,OAAOR,IAAI;IACZ;EACD,CAAC;EACDU,QAAQ,EAAE;IACTC,QAAQ,EAAE,MAAAA,CAAON,CAAC,EAAE;MAAEO,IAAI;MAAEC,UAAU;MAAEC,YAAY;MAAEC;IAAI,CAAC,KAAK;MAC/D,MAAM,IAAAhB,iBAAS,EAAC,CAAC;MACjB,IAAIiB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;QAC1C,MAAM,IAAIV,KAAK,CAAC,yDAAyD,CAAC;MAC3E;MACA,MAAMW,SAAS,GAAG,IAAIlB,cAAK,CAAC;QAAEW,IAAI;QAAEC,UAAU;QAAEC,YAAY;QAAEC;MAAI,CAAC,CAAC;MACpE,MAAMf,IAAI,GAAG,MAAMmB,SAAS,CAACC,IAAI,CAAC,CAAC;MACnC,OAAOpB,IAAI;IACZ,CAAC;IACDqB,WAAW,EAAE,MAAAA,CAAOhB,CAAC,EAAE;MAAEiB,MAAM;MAAEC,KAAK;MAAEC,OAAO;MAAEC;IAAM,CAAC,KAAK;MAC5D,MAAM,IAAA1B,iBAAS,EAAC,CAAC;MACjB,IAAIiB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;QAC1C,MAAM,IAAIV,KAAK,CAAC,yDAAyD,CAAC;MAC3E;MACA,MAAMkB,iBAAiB,GAAG,IAAIC,iBAAQ,CAAC;QAAEL,MAAM;QAAEC,KAAK;QAAEC,OAAO;QAAEC;MAAM,CAAC,CAAC;MACzE,MAAMzB,IAAI,GAAG,MAAM0B,iBAAiB,CAACN,IAAI,CAAC,CAAC;MAC3C,OAAOpB,IAAI;IACZ,CAAC;IACD4B,WAAW,EAAE,MAAAA,CAAOvB,CAAC,EAAE;MAAEC;IAAG,CAAC,KAAK;MACjC,MAAM,IAAAP,iBAAS,EAAC,CAAC;MACjB,IAAIiB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;QAC1C,MAAM,IAAIV,KAAK,CAAC,yDAAyD,CAAC;MAC3E;MACA,IAAI,CAAC,IAAAD,yBAAe,EAACD,EAAE,CAAC,EAAE,MAAM,IAAIE,KAAK,CAAC,oBAAoB,CAAC;MAC/D,MAAMmB,iBAAQ,CAACE,SAAS,CAAC;QAAEC,KAAK,EAAExB;MAAG,CAAC,CAAC;MACvC,MAAMyB,OAAO,GAAG,CAAC,MAAM9B,cAAK,CAAC4B,SAAS,CAAC;QAAEG,GAAG,EAAE1B;MAAG,CAAC,CAAC,EAAE2B,YAAY;MACjE,IAAI,CAACF,OAAO,EAAE,MAAM,IAAIvB,KAAK,CAAC,iBAAiB,CAAC;MAChD,OAAOuB,OAAO;IACf,CAAC;IACDG,mBAAmB,EAAE,MAAAA,CAAO7B,CAAC,EAAE;MAAE8B,IAAI;MAAEC;IAAK,CAAC,KAAK;MACjD,MAAM,IAAArC,iBAAS,EAAC,CAAC;MACjB,IAAIiB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;QAC1C,MAAM,IAAIV,KAAK,CAAC,yDAAyD,CAAC;MAC3E;MACA,IAAI,CAAC,IAAAD,yBAAe,EAAC4B,IAAI,CAAC,IAAI,CAAC,IAAA5B,yBAAe,EAAC6B,IAAI,CAAC,EAAE;QACrD,MAAM,IAAI5B,KAAK,CAAC,4BAA4B,CAAC;MAC9C;MACA,MAAM6B,MAAM,GAAG,MAAMC,eAAM,CAAC7B,QAAQ,CAAC0B,IAAI,CAAC;MAC1C,MAAML,KAAK,GAAG,MAAM7B,cAAK,CAACQ,QAAQ,CAAC2B,IAAI,CAAC;MACxC,IAAI,CAACC,MAAM,IAAI,CAACP,KAAK,EAAE;QACtB,MAAM,IAAItB,KAAK,CAAC,2BAA2B,CAAC;MAC7C;MACA6B,MAAM,CAACvC,MAAM,CAACyC,IAAI,CAACT,KAAK,CAACE,GAAG,CAAC;MAC7BF,KAAK,CAACO,MAAM,GAAGA,MAAM,CAACL,GAAG;MACzB,MAAMK,MAAM,CAACjB,IAAI,CAAC,CAAC;MACnB,MAAMU,KAAK,CAACV,IAAI,CAAC,CAAC;MAClB,OAAOiB,MAAM;IACd,CAAC;IACDG,yBAAyB,EAAE,MAAAA,CAAOnC,CAAC,EAAE;MAAE+B,IAAI;MAAEK;IAAK,CAAC,KAAK;MACvD,MAAM,IAAA1C,iBAAS,EAAC,CAAC;MACjB,IAAIiB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;QAC1C,MAAM,IAAIV,KAAK,CAAC,yDAAyD,CAAC;MAC3E;MACA,IAAI,CAAC,IAAAD,yBAAe,EAACkC,IAAI,CAAC,IAAI,CAAC,IAAAlC,yBAAe,EAAC6B,IAAI,CAAC,EAAE;QACrD,MAAM,IAAI5B,KAAK,CAAC,4CAA4C,CAAC;MAC9D;MACA,MAAMkC,QAAQ,GAAG,MAAMf,iBAAQ,CAAClB,QAAQ,CAACgC,IAAI,CAAC;MAC9C,MAAMX,KAAK,GAAG,MAAM7B,cAAK,CAACQ,QAAQ,CAAC2B,IAAI,CAAC;MACxC,IAAI,CAACM,QAAQ,IAAI,CAACZ,KAAK,EAAE,MAAM,IAAItB,KAAK,CAAC,2CAA2C,CAAC;MACrFkC,QAAQ,CAACZ,KAAK,GAAGA,KAAK,CAACE,GAAG;MAC1BF,KAAK,CAACY,QAAQ,GAAGA,QAAQ,CAACV,GAAG;MAC7B,MAAMU,QAAQ,CAACtB,IAAI,CAAC,CAAC;MACrB,MAAMU,KAAK,CAACV,IAAI,CAAC,CAAC;MAClB,OAAOU,KAAK;IACb;EACD;AACD,CAAC","ignoreList":[]}